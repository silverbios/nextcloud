name: Build on New notify_push Release

on:
  schedule:
    - cron: '0 12,22 * * *'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

env:
  BUILDKIT_PROGRESS: plain
  NP_VERSION: .github/.state/.last_release_np

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      build_needed: ${{ steps.check.outputs.build_needed }}
      latest_tag: ${{ steps.check.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch latest release tag
        id: check
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/nextcloud/notify_push/releases \
            | jq -r '.[] | select(.prerelease == false and .draft == false) | .tag_name' \
            | head -n 1)

          echo "Latest tag: $latest_tag"
          mkdir -p "$(dirname "$NP_VERSION")"

          if [ -f "$NP_VERSION" ]; then
            previous_tag=$(cat "$NP_VERSION")
            echo "Previous tag: $previous_tag"

            if [ "$latest_tag" != "$previous_tag" ]; then
              echo "build_needed=true" >> "$GITHUB_OUTPUT"
            else
              echo "build_needed=false" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "First run - build needed"
            echo "build_needed=true" >> "$GITHUB_OUTPUT"
          fi

          echo "latest_tag=$latest_tag" >> "$GITHUB_OUTPUT"

  build:
    needs: check-release
    if: needs.check-release.outputs.build_needed == 'true'
    runs-on: ubuntu-latest
    env:
      LATEST_TAG: ${{ needs.check-release.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Build and push image
        run: |
          echo "Building for release $LATEST_TAG"

          if [ -z "$LATEST_TAG" ]; then
            echo "Missing latest tag, aborting."
            exit 1
          fi

          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg NOTIFY_PUSH_VERSION=$LATEST_TAG \
            --provenance=false \
            --sbom=false \
            --tag ghcr.io/${{ github.repository_owner }}/nextcloud-notifypush:$LATEST_TAG \
            --tag ghcr.io/${{ github.repository_owner }}/nextcloud-notifypush:latest \
            --push \
            --file ./Notify_Push.Dockerfile \
            .

  update-release:
    needs: [check-release, build]
    if: needs.check-release.outputs.build_needed == 'true'
    runs-on: ubuntu-latest
    env:
      LATEST_TAG: ${{ needs.check-release.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update last_release file
        run: |
          install -D <(echo "$LATEST_TAG") "$NP_VERSION"

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git pull --quiet
          git add -f "$last_file"
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "Update .last_release to $LATEST_TAG"
          git push origin HEAD:${GITHUB_REF} --no-verify


          mkdir -p "$(dirname "$NP_VERSION")"
          echo "$LATEST_TAG" > "$NP_VERSION"

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git pull --quiet
          git add -f "$NP_VERSION"
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "Update .last_release to $LATEST_TAG"
          git push origin HEAD:${GITHUB_REF} --no-verify
